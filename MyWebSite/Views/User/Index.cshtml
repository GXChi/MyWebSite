
@{
    ViewData["Title"] = "Index";
}
@using MyWebSite.Domain.Entities;
@using MyWebSite.Application.Dto;
@model PaginatedList<User>

<form asp-action="Index">
    <div class="from-actions no-color">
        <input type="text" name="searchString" />
        <input type="submit" value="搜索" id="search" />
        <a asp-action="Index">Back To Full List</a>

    </div>
</form>
<table class="table" style="background-color:rgba(233, 231, 221, 0.15)">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">姓名</a>
            </th>
            <th>
                密码
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">用户名</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PassWrod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNexPage ? "disabled" : "";
}
<div>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-Page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a id="index1" asp-route-Page="1" class="btn btn-default">
        1
    </a>
    <a asp-action="Index" asp-route-Page="2" class="btn btn-default">
        2
    </a>
    <a asp-action="Index" asp-route-Page="3" class="btn btn-default">
        3
    </a>
    <a asp-action="Index" asp-route-Page="4" class="btn btn-default">
        4
    </a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-Page="@(Model.PageIndex + 1) "
       asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">
        Next
    </a>
    <input name="pageIndex" />
    <select class="btn btn-default" id="pageSize">
        <option>1</option>
        <option>5</option>
        <option>10</option>
        <option>20</option>
        <option>50</option>
    </select>
    <label>共 @Model.TotalCount 条数据，@Model.TotalPages 页，当前第 @Model.PageIndex 页 ，每页 @Model.CurrentPage 条</label>
</div>



<div>
    <a asp-action="Create">
        <span class="btn btn-success" aria-hidden="true">新增</span>
    </a>
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(function () {
        $("#")
        $("#search").click(function () {
            var searchString = $("[name='searchString']").val();
            $.ajax({
                type: "get",
                url: "/User/Index",
                data: { searchString: searchString }
            });

        });

        $("#pageSize").change(function () {
            $.ajax({
                type: "post",
                url: "/User/Index/pageSize=",
                data: { pageSize: $(this).val() },
                success: function () {
                    //location.reload();

                }

            })
            //$.post("/User/Index", {pageSize:$(this).val()})
            //alert($(this).val());
        });

        $("#index1").click(function () {
            $.ajax({
                type: "get",
                url: "User/Index",
                data: { page: "1", pageSize: "3" },

            })

        });
    });



</script>
